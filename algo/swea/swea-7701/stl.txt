#include <iostream>
#include <unordered_map>
#include <vector>
#include <queue>

using namespace std;

struct isMin {
	bool operator()(string a, string b) {
		if (a.size() > b.size()) return true;
		else if (a.size() == b.size()) {
			return a > b;
		}
		return false;
	}
};

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);

	int T, N;
	cin >> T;
	for (int test = 1; test <= T; ++test) {
		unordered_map<string, int> um;
		priority_queue<string, vector<string>, isMin> pq;
		cin >> N;
		string str;
		for (int i = 0; i < N; ++i) {
			cin >> str;
			if (um.count(str) != 0) continue;
			um.insert({ str, 1 });
			pq.push(str);
		}
		cout << "#" << test << "\n";
		while (!pq.empty()) {
			cout << pq.top() << "\n";
			pq.pop();
		}
	}
	return 0;
}