class Solution {
public:
    bool canFinish(int N, vector<vector<int>>& prerequisites) {
        if (prerequisites.empty()) return true;

        vector<vector<int>> adj(N, vector<int>());

        int start, end;
        for (int i = 0; i < prerequisites.size(); ++i) {
            start = prerequisites[i][1], end = prerequisites[i][0];
            if (start == end) return false;
            adj[start].push_back(end);
        }

        for (int i = 0; i < prerequisites.size(); ++i) {
            start = prerequisites[i][1];

            stack<int> s;
            s.push(start);

            vector<bool> visited(N, false);
            visited[start] = true;
            while (!s.empty()) {
                int cur = s.top();
                s.pop();

                for (auto& next : adj[cur]) {
                    if (next == start) return false;
                    if (visited[next]) continue;
                    visited[next] = true;
                    s.push(next);
                }
            }
        }
        return true;
    }
};